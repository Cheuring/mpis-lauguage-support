{
	"add": {
		"prefix": "add",
		"body": "add ${1:\\$t0}, ${2:\\$t1}, ${3:\\$t2}\t\t# $1 = $2 + $3\n",
		"description": "add",
		"scope": "source.mips"
	},
	"addi": {
		"prefix": "addi",
		"body": "addi ${1:\\$t0}, ${2:\\$t1}, ${3:0}\t\t# $1 = $2 + $3\n",
		"description": "add immediate",
		"scope": "source.mips"
	},
	"allocate": {
		"prefix": "allocateMemory",
		"body": "# Allocate ${1:16} of bytes in memory\naddi \\$a0, \\$0, ${1:16}\t\t# ${1:16} bytes to be allocated\naddi \\$v0, \\$0, 9\t\t# system call #9 - allocate memory\nsyscall\t\t\t\t# execute",
		"description": "System call 9: Allocate memory.",
		"scope": "source.mips"
	},
	"and": {
		"prefix": "and",
		"body": "and ${1:\\$t0}, ${2:\\$t1}, ${3:\\$t2}\t\t# $1 = $2 & $3\n",
		"description": "and",
		"scope": "source.mips"
	},
	"andi": {
		"prefix": "andi",
		"body": "andi ${1:\\$t0}, ${2:\\$t1}, ${3:0}\t\t# $1 = $2 & $3\n",
		"description": "and immediate",
		"scope": "source.mips"
	},
	"b": {
		"prefix": "b",
		"body": "b ${1:target}\t\t# branch to $1\n",
		"description": "branch unconditional",
		"scope": "source.mips"
	},
	"beq": {
		"prefix": "beq",
		"body": "beq ${1:\\$t0}, ${2:\\$t1}, ${3:target}\t\t# if $1 == $2 then goto $3\n",
		"description": "branch if equal",
		"scope": "source.mips"
	},
	"bge": {
		"prefix": "bge",
		"body": "bge ${1:\\$t0}, ${2:\\$t1}, ${3:target}\t\t# if $1 >= $2 then goto $3\n",
		"description": "branch if greater then or equal",
		"scope": "source.mips"
	},
	"bgt": {
		"prefix": "bgt",
		"body": "bgt ${1:\\$t0}, ${2:\\$t1}, ${3:target}\t\t# if $1 > $2 then goto $3\n",
		"description": "branch if greater then",
		"scope": "source.mips"
	},
	"ble": {
		"prefix": "ble",
		"body": "ble ${1:\\$t0}, ${2:\\$t1}, ${3:target}\t\t# if $1 <= $2 then goto $3\n",
		"description": "branch if less then or equal",
		"scope": "source.mips"
	},
	"blt": {
		"prefix": "blt",
		"body": "blt ${1:\\$t0}, ${2:\\$t1}, ${3:target}\t\t# if $1 < $2 then goto $3\n",
		"description": "branch if less then",
		"scope": "source.mips"
	},
	"bne": {
		"prefix": "bne",
		"body": "bne ${1:\\$t0}, ${2:\\$t1}, ${3:target}\t\t# if $1 != $2 then goto $3\n",
		"description": "branch if not equal",
		"scope": "source.mips"
	},
	"div": {
		"prefix": "div",
		"body": "div ${1:\\$t0}, ${2:\\$t1}\t\t# $1 / $2\nmflo ${3:\\$t2}\t\t# $3 = floor($1 / $2) \nmfhi ${4:\\$t3}\t\t# $4 = $1 % $2 \n",
		"description": "divide",
		"scope": "source.mips"
	},
	"exit": {
		"prefix": "exit",
		"body": "addi \\$v0, \\$0, 10\t\t# System call 10 - Exit\nsyscall\t\t\t\t# execute",
		"description": "System call 10: Exit.",
		"scope": "source.mips"
	},
	"inputDouble": {
		"prefix": "inputDouble",
		"body": "addi \\$v0, \\$0, 7\t\t# system call #7 - input double\nsyscall\t\t\t\t# execute\nmov.d ${1:variable}, \\$f0\t\t# $1 = input double\n",
		"description": "System call 7: Read Double",
		"scope": "source.mips"
	},
	"inputFloat": {
		"prefix": "inputFloat",
		"body": "addi \\$v0, \\$0, 6\t\t# system call #6 - input float\nsyscall\t\t\t\t# execute\nmov.s ${1:variable}, \\$f0\t\t# $1 = input float\n",
		"description": "System call 6: Read float",
		"scope": "source.mips"
	},
	"inputInt": {
		"prefix": "inputInt",
		"body": "addi \\$v0, \\$0, 5\t\t# system call #5 - input int\nsyscall\t\t\t\t# execute\nmove ${1:variable}, \\$v0\t\t# $1 = input int\n",
		"description": "System call 5: Read int",
		"scope": "source.mips"
	},
	"inputString": {
		"prefix": "inputString",
		"body": "addi \\$v0, \\$0, 8\t\t# system call #8 - input string\nla \\$a0, ${1:buffer}\t\t#buffer address\nli \\$a1, ${2:buffSize}\t\t\t#max buffer size\nsyscall\t\t\t\t# execute\n",
		"description": "System call 8: input string",
		"scope": "source.mips"
	},
	"jal": {
		"prefix": "jal",
		"body": "jal ${1:target}\t\t# jump to $1 and save position to \\$ra\n",
		"description": "jump and link",
		"scope": "source.mips"
	},
	"jr": {
		"prefix": "jr",
		"body": "jr ${1:\\$ra}\t\t# jump to $1\n",
		"description": "jump register",
		"scope": "source.mips"
	},
	"j": {
		"prefix": "j",
		"body": "j ${1:target}\t\t# jump to $1\n",
		"description": "jump",
		"scope": "source.mips"
	},
	"la": {
		"prefix": "la",
		"body": "la ${1:\\$t1}, ${2:var1}\t\t# \n",
		"description": "load address",
		"scope": "source.mips"
	},
	"lb": {
		"prefix": "lb",
		"body": "lb ${1:\\$t1}, ${2:${3:0}(${4:\\$s1})}\t\t# \n",
		"description": "load byte",
		"scope": "source.mips"
	},
	"li": {
		"prefix": "li",
		"body": "li ${1:\\$t1}, $2\t\t# $1 = $2\n",
		"description": "load immediate",
		"scope": "source.mips"
	},
	"lw": {
		"prefix": "lw",
		"body": "lw ${1:\\$t1}, ${2:${3:0}(${4:\\$s1})}\t\t# \n",
		"description": "load word",
		"scope": "source.mips"
	},
	"move": {
		"prefix": "move",
		"body": "move ${1:\\$t0}, ${2:\\$t1}\t\t# $1 = $2\n",
		"description": "move",
		"scope": "source.mips"
	},
	"mult": {
		"prefix": "mult",
		"body": "mult ${1:\\$t0}, ${2:\\$t1}\t\t# $1 * $2 = Hi and Lo registers\nmflo ${3:\\$t2}\t\t# copy Lo to $3\n",
		"description": "multiply",
		"scope": "source.mips"
	},
	"nor": {
		"prefix": "nor",
		"body": "nor ${1:\\$t0}, ${2:\\$t1}, ${3:\\$t2}\t\t# $1 = ~($2 | $3)\n",
		"description": "nor",
		"scope": "source.mips"
	},
	"or": {
		"prefix": "or",
		"body": "or ${1:\\$t0}, ${2:\\$t1}, ${3:\\$t2}\t\t# $1 = $2 | $3\n",
		"description": "or",
		"scope": "source.mips"
	},
	"ori": {
		"prefix": "ori",
		"body": "ori ${1:\\$t0}, ${2:\\$t1}, ${3:0}\t\t# $1 = $2 | $3\n",
		"description": "or immediate",
		"scope": "source.mips"
	},
	"printDouble": {
		"prefix": "printDouble",
		"body": "addi \\$v0, \\$0, 3\t\t# system call #3 - print double\nmov.d \\$f12, ${1:variable}\nsyscall\t\t\t\t# execute\n",
		"description": "System call 3: print double",
		"scope": "source.mips"
	},
	"printFloat": {
		"prefix": "printFloat",
		"body": "addi \\$v0, \\$0, 2\t\t# system call #2 - print float\nmov.s \\$f12, ${1:variable}\nsyscall\t\t\t\t# execute\n",
		"description": "System call 2: print float",
		"scope": "source.mips"
	},
	"printInt": {
		"prefix": "printInt",
		"body": "addi \\$v0, \\$0, 1\t\t# system call #1 - print int\nadd \\$a0, \\$0, ${1:variable}\nsyscall\t\t\t\t# execute\n",
		"description": "System call 1: print int",
		"scope": "source.mips"
	},
	"printString": {
		"prefix": "printString",
		"body": "addi \\$v0, \\$0, 4\t\t# system call #4 - print string\nla \\$a0, ${1:string}\nsyscall\t\t\t\t# execute\n",
		"description": "System call 4: print string",
		"scope": "source.mips"
	},
	"sb": {
		"prefix": "sb",
		"body": "sb ${1:\\$t1}, ${2:${3:0}(${4:\\$s1})}\t\t# \n",
		"description": "store byte",
		"scope": "source.mips"
	},
	"sll": {
		"prefix": "sll",
		"body": "sll ${1:\\$t0}, ${2:\\$t1}, ${3:0}\t\t# $1 = $2 << $3\n",
		"description": "shift left",
		"scope": "source.mips"
	},
	"slt": {
		"prefix": "slt",
		"body": "slt ${1:\\$t0}, ${2:\\$s0}, ${3:\\$s1}\t\t# $1 = ($2 < $3) ? 1 : 0\n",
		"description": "set on less than",
		"scope": "source.mips"
	},
	"slti": {
		"prefix": "slti",
		"body": "slti ${1:\\$t0}, ${2:\\$s0}, ${3:0}\t\t# $1 = ($2 < $3) ? 1 : 0\n",
		"description": "set on less than immediate",
		"scope": "source.mips"
	},
	"srl": {
		"prefix": "srl",
		"body": "srl ${1:\\$t0}, ${2:\\$t1}, ${3:0}\t\t# $1 = $2 >> $3\n",
		"description": "shift right",
		"scope": "source.mips"
	},
	"string": {
		"prefix": "string",
		"body": "${1:string}: .asciiz \"$2\"",
		"description": "string var",
		"scope": "source.mips"
	},
	"sub": {
		"prefix": "sub",
		"body": "sub ${1:\\$t0}, ${2:\\$t1}, ${3:\\$t2}\t\t# $1 = $2 - $3\n",
		"description": "subtract",
		"scope": "source.mips"
	},
	"subi": {
		"prefix": "subi",
		"body": "subi ${1:\\$t0}, ${2:\\$t1}, ${3:0}\t\t# $1 = $2 - $3\n",
		"description": "subtract immediate",
		"scope": "source.mips"
	},
	"sw": {
		"prefix": "sw",
		"body": "sw ${1:\\$t1}, ${2:${3:0}(${4:\\$s1})}\t\t# \n",
		"description": "store word",
		"scope": "source.mips"
	},
	"var": {
		"prefix": "var",
		"body": "${1:var}: .${2:word} $3",
		"description": "variable",
		"scope": "source.mips"
	},
	"xor": {
		"prefix": "xor",
		"body": "xor ${1:\\$t0}, ${2:\\$t1}, ${3:\\$t2}\t\t# $1 = $2 ^ $3\n",
		"description": "xor",
		"scope": "source.mips"
	},
	"xori": {
		"prefix": "xori",
		"body": "xori ${1:\\$t0}, ${2:\\$t1}, ${3:0}\t\t# $1 = $2 ^ $3\n",
		"description": "xor immediate",
		"scope": "source.mips"
	},
	"macro":{
		"prefix": "macro",
		"body": ".macro ${1:NAME} \\$${2:params}\n${3:body}\n.end_macro\n",
		"description": "create macro",
		"scope": "source.mips"
	}
}
